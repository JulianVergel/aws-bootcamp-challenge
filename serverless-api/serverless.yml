# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: julianvergel
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: serverless-api
# "service" is the name of this project. This will also be added to your AWS resource names.
service: serverless-api

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-2
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource:
        - "arn:aws:dynamodb:us-east-2:249652205214:table/UsersTable"
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource:
        - Ref: UserNotificationsTopic
    - Effect: "Allow"
      Action:
        - "sqs:ReceiveMessage"
        - "sqs:DeleteMessage"
      Resource:
        Fn::GetAtt: [ UserCreatedQueue, Arn ]
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
      Resource:
        Fn::GetAtt: [ UserCreatedQueue, Arn ]
  environment:
    USERS_TABLE: UsersTable
    NOTIFICATIONS_TOPIC_ARN:
      Ref: UserNotificationsTopic
    USER_CREATED_QUEUE_URL:
      Ref: UserCreatedQueue

resources:
  Resources:
    UserCreatedQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: UserCreatedQueue
    UserNotificationsTopic:
      Type: "AWS::SNS::Topic"
      Properties:
        TopicName: UserNotificationsTopic

plugins:
  - serverless-offline

functions:
  createUser:
    handler: handler.createUser
    events:
      - httpApi:
          path: /users
          method: post
  getUser:
    handler: handler.getUser
    events:
      - httpApi:
          path: /users/{id}
          method: get
  updateUser:
    handler: handler.updateUser
    events:
      - httpApi:
          path: /users/{id}
          method: put
  deleteUser:
    handler: handler.deleteUser
    events:
      - httpApi:
          path: /users/{id}
          method: delete
  sendEmail:
    handler: handler.sendEmail
    events:
      - sqs:
          arn:
            Fn::GetAtt: [ UserCreatedQueue, Arn ]